#!/usr/bin/env ruby
require "fileutils"
require 'bundler'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def run_shell_command shell_string, fail_on_error: true
  res = system shell_string
  if !res && fail_on_error
    puts ">>> Command `#{shell_string}` Failed with error: #{$CHILD_STATUS}"
    exit($CHILD_STATUS.exitstatus)
  end
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  run_shell_command "gem install bundler --conservative"
  run_shell_command "bundle check || bundle install -j4"

  puts "== Loading development environment vars"
  Bundler.setup(:default)
  require 'dotenv'
  Dotenv.load('.env.development')

  puts "\n== Installing assets dependencies =="
  run_shell_command "bin/yarn"

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   FileUtils.cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Initializing postgresql Service"
  run_shell_command "sudo service postgresql start" #para linux

  puts "\n== Creating default superuser local database=="
  run_shell_command "sudo -u postgres createuser \
    --createdb --login \
    --createrole --no-password --superuser \
    $USER", fail_on_error: false # Permitimos fallar por si el usuario ya existe

  puts "\n== Creating specific role to database (recommended password: #{ENV['DB_PASS']})=="
  run_shell_command "createuser \
    --createdb --login \
    --pwprompt --createrole --superuser \
    #{ENV['DB_USER']}", fail_on_error: false # Permitimos fallar por si el usuario ya existe


  puts "\n== Preparing development database =="
  run_shell_command "DB_NAME=full_stack_development bin/rails db:setup"

  puts "\n== Removing old logs and tempfiles =="
  run_shell_command "rm -f log/*"
  run_shell_command "rm -rf tmp/cache"

end
